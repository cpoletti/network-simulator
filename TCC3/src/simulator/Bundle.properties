Menu.title = Simulator
Menu.title.secundaryMode = Simulator - Secondary Mode
Menu.jmFile.text=File
Menu.jmiExit.text=Exit
Menu.jmView.text=View
Menu.jrmiNetMap.text=Net Map and Queue Packets
Menu.jrmiPacketDetail.text=Packet Detail
Menu.jrmiArpTable.text = ARP Table
Menu.jrmiNetstat.text = Netstat
Menu.jmOptions.text = Options
Menu.jcbmAutomaticAnswer.text = AutoAnswer
Menu.jmLanguage.text=Language
Menu.jrbiPortuguese.text = Portuguese
Menu.jrbiEnglish.text = English
Menu.jmHelp.text=Help
Menu.jmiAbout.text=About
Menu.message.secundaryMessage = There are already running a simulator.\nThis simulator is running in secondary mode.
Menu.message.notPossible = Can not execute other simulator
Menu.text.port = Port
Menu.overwriteFile.title = Choose an option
Menu.overwriteFile.message = Overwrite the file?
Menu.automaticAnswerEnable.text = Auto Answer Enabled
Menu.automaticAnswerDisable.text = Automatic Anwser Disabled
Menu.dialog.name = Name
Menu.message.newPacket = You received a new packet!
Menu.message.newStation = You have a new contact station!
Menu.message.stationLost = You lost a contact station!
Menu.message.saveChanges = Save changes to the current network map?

NetMap.title = Net Map and Queue Packets
NetMap.jbAdd.text = Addd
NetMap.jbRemove.text = Remove
NetMap.jbCreate.text = Send
NetMap.jbFindStations.text = Find Stations
NetMap.jpNetMap.title = Net Map
NetMap.jpPacketRow.title = Queue Packets
NetMap.jlReceived.text = Received:
NetMap.jlReceivedTotal.text = Total Packets Received:
NetMap.jlSent.text = Sent:
NetMap.jlSentTotal.text = Total Packets Sent
NetMap.newStation.port = Port:
NetMap.message.cantRemove = Could not remove station!
NetMap.message.addStaton = Add at least one station!

ArpTable.title = ARP Table
ArpTable.table.ip = IP Adress
ArpTable.table.mac = MAC Adress

Netstat.title = Netstat
Netstat.table.protocol = Protocol
Netstat.table.localAdress = Local Address
Netstat.table.externalAdress = Remote Address
Netstat.table.state = State
Netstat.jpConectionDetail.title = Connection Status Details

About.title = About
About.jbExit.text = Exit
About.jtpInformation.text = Version 1.0 Beta\nAuthor Diego M\u00fcller\n\nVersion 2.0 Beta\nAuhtor Cristiano F\u00fchr Poletti\n\nThis product is OPEN SOURCE

AddPC.title = Add Station
AddPC.jbAdd.text = Add
AddPC.jbCancel.text = Cancel
AddPC.jlIP.text = IP
AddPc.message.notPossible = Can not be add new station!
AddPc.message.alreadyExists = Station already exists in your network map!
AddPc.message.invalidIP = Invalid IP address!

FindStation.title = Find Stations
FindStation.jbStop.text = Stop
FindStation.jlFindStations.text = Find stations

PacketDetail.sendMessage = The packet was sent successfully!
PacketDetail.jbPacketAnswer.text=Answer
PacketDetail.jbPacketSend.text=Send
PacketDetail.title=Packet Details

PacketSend.title = Create Packet
PacketSend.jbCancel.text = Cancel
PacketSend.jbCreate.text = Create
PacketSend.jlDestination.text = Destination:
PacketSend.jlLink.text = Link:
PacketSend.jlInternet.text = Internet:
PacketSend.jlTransport.text = Transport:
PacketSend.jlAplication.text = Aplication:
PacketSend.jlNotice.linkLayerMessage = Choose the Link layer protocol!
PacketSend.jlNotice.internetLayerMessage = Choose the Internet layer protocol!
PacketSend.jlNotice.transportLayerMessage = Choose the Transport layer protocol!
PacketSend.jlNotice.aplicationLayerMessage = Choose the Aplication layer protocol!

PanelLinkEthernet.jbPreamble.text = Preamble
PanelLinkEthernet.jbPreamble.tooltip = First field of an Ethernet frame contains seven bytes consisting of alternating 0s and 1s bits that alternate alert the receiver on the frame that is coming and enables synchronizing its clock input.
PanelLinkEthernet.jbSFD.text = SFD
PanelLinkEthernet.jbSFD.tooltip = Announces the beginning of a frame. The STF alert the station or stations that this is the last chance for synchronization. The last two bits are 11 and warn the receiver that the next field is the destination address.
PanelLinkEthernet.jbDestinationMAC.text = Destination Address
PanelLinkEthernet.jbDestinationMAC.tooltip = This field is six bytes in length and contains the physical address of the destination station to receive the packet.
PanelLinkEthernet.jbSourceMAC.text = Source Address
PanelLinkEthernet.jbSourceMAC.tooltip = This field is six bytes in length and contains the physical address of the sender of the packet.
PanelLinkEthernet.jbType.text = Type
PanelLinkEthernet.jbType.tooltip = Specifies a number for the protocol used in the network layer.
PanelLinkEthernet.jbData.text = Data (Internet)
PanelLinkEthernet.jbData.tooltip=This field transports data encapsulated from the higher layer protocols. It has a minimum of 46 byes and a maximum of 1500 bytes.
PanelLinkEthernet.jbChecksum.text=Checksum
PanelLinkEthernet.jbChecksum.tooltip=Contains information for error detection.
PanelLinkEthernet.jspProtocolDescription.title = Protocol Ethernet Description
PanelLinkEthernet.jepProtocolDescription.text = In standard Ethernet, the MAC sublayer is responsible for the implementation of the access method. It also encapsulates data from the upper layer into frames and then passes them on to the physical layer. <br/><br/>Ethernet there are no mechanisms for recognizing frames received, becoming known as a way unreliable. Confirmations must be implemented in the upper layers.

PanelInternetIP.jbVersion.text = Version
PanelInternetIP.jbVersion.tooltip = This 4-bit field defines the version of the IP protocol.
PanelInternetIP.jbHeaderLenght.text = IHL
PanelInternetIP.jbHeaderLenght.tooltip = This 4-bit field defines the length of the datagram header in 4-byte words.
PanelInternetIP.jbServiceType.text = Differentiated Services
PanelInternetIP.jbServiceType.tooltip = Specifies how the datagram should be processed.
PanelInternetIP.jbTotalLength.text = Total length
PanelInternetIP.jbTotalLength.tooltip = This is a 16 bit field which defines the length (header plus data) of an IP datagram in bytes.
PanelInternetIP.jbIdentification.text = Identification
PanelInternetIP.jbIdentification.tooltip = Used to determine which datagram a new fragment belongs.
PanelInternetIP.jbDF.text = <html><center>D<br>F</center>
PanelInternetIP.jbDF.tooltip = Order to not fragment the datagram.
PanelInternetIP.jbMF.text = <html><center>M<br>F</center>
PanelInternetIP.jbMF.tooltip = Indicates that more fragments of this datagram.
PanelInternetIP.jbFragmentOffset.text = Fragment Offset
PanelInternetIP.jbFragmentOffset.tooltip = Informs that point the current datagram the fragment belongs
PanelInternetIP.jbTimeToLive.text = Time to live
PanelInternetIP.jbTimeToLive.tooltip = Counter used to limit the lifetime of packets.
PanelInternetIP.jbProtocol.text = Protocol
PanelInternetIP.jbProtocol.tooltip = This 8-bit field defines the upper level protocol that is using the services of the IP layer.
PanelInternetIP.jbChecksum.text = Header Checksum
PanelInternetIP.jbChecksum.tooltip = Used to detect errors.
PanelInternetIP.jbSourceAddress.text = Source address
PanelInternetIP.jbSourceAddress.tooltip = This 32-bit field defines the source IP address.
PanelInternetIP.jbDestinationAddress.text = Destination address
PanelInternetIP.jbDestinationAddress.tooltip = This 32-bit field defines the destination IP address.
PanelInternetIP.jbOptions.text = Options
PanelInternetIP.jbOptions.tooltip = Designed for later versions of the protocol include missing information in the original design.
PanelInternetIP.jbData.text = Data (Trasport)
PanelInternetIP.jspProtocolDescription.title=Protocol IP Description
PanelInternetIP.jepProtocolDescription.text=The IP (Internet Protocol) is the delivery mechanism used by TCP/IP protolos, being a unreliable protocol, not providing mechanisms for error or flow control.<br/><br/>The IPv4 is also a connectionless protocol, this means that each datagram is handled independently and that each datagram may follow a different route to your destination.

PanelInternetICMP.jbICMPType.text = Type
PanelInternetICMP.jbICMPType.tooltip = Field containing eight bit integers, identifying the message.
PanelInternetICMP.jbICMPCode.text = Code
PanelInternetICMP.jbICMPCode.tooltip = Field containing eight bits, which provides additional information about the message type.
PanelInternetICMP.jbChecksumICMP.text = Checksum
PanelInternetICMP.jbChecksumICMP.tooltip = Field containing a checksum of 16 bits.
PanelInternetICMP.jbICMPData.text = ICMP Data
PanelInternetICMP.jspProtocolDescription.title=Protocol ICMP Description
PanelInternetICMP.jepProtocolDescription.text=The operation of the Internet is monitored closely by the routers. When something unexpected happens during the processing of the packet at a router, sending tranmissor is reported by the ICMP (Internet Control Message Protocol). <br/> ICMP is also used to test the Internet. About 12 types of ICMP messages are defined. Each ICMP message type is tranported encapsulated within an IP packet.
PanelInternetICMP.jpIP.title = IP Packet
PanelInternetICMP.jpICMP.title = ICMP Packet

PanelTransportUDP.jbSourcePort.text = Source Port
PanelTransportUDP.jbSourcePort.tooltip = Contains the port number of the sender application.
PanelTransportUDP.jbDestinationPort.text = Destination Port
PanelTransportUDP.jbDestinationPort.tooltip = Contains the port number of the application to which to send the data.
PanelTransportUDP.jbMessageLenght.text = Message Length
PanelTransportUDP.jbMessageLenght.tooltip = Specifies the total size of the UDP message, being measured in bytes.
PanelTransportUDP.jbChecksum.text = Checksum
PanelTransportUDP.jbChecksum.tooltip = 16-bit field used to detect errors in the transmission of UDP datagrams.
PanelTransportUDP.jbData.text = Data
PanelTransportUDP.jspProtocolDescription.title=Protocol UDP Description
PanelTransportUDP.jepProtocolDescription.text=UDP (User Datagram Protocol) is a protocol Transport connectionless and unreliable. It adds no additional control the delivery of IP services, except implement interprocess communication, rather than the communication between hosts. Likewise, error checking is implemented to a very limited way.

PanelTransportTCP.jbSourcePort.text = Source Port
PanelTransportTCP.jbSourcePort.tooltip = Contains the port number of the sender application.
PanelTransportTCP.jbDestinationPort.text = Destination Port
PanelTransportTCP.jbDestinationPort.tooltip = Contains the port number of the application to which to send the data.
PanelTransportTCP.jbSequence.text = Sequence Number
PanelTransportTCP.jbSequence.tooltip = This 32-bit field identifies the number assigned to the first data byte of a segment.
PanelTransportTCP.jbAcknowledgment.text = Acknowledgement Number
PanelTransportTCP.jbAcknowledgment.tooltip = This 32-bit field identifies the number of bytes that the receiver expects to receive from the other party.
PanelTransportTCP.jbDataOffset.text = Data Offset
PanelTransportTCP.jbDataOffset.tooltip = This 4-bit field identifies the number of words of 4 bytes of a TCP header.
PanelTransportTCP.jbReserved.text = Reserved
PanelTransportTCP.jbReserved.tooltip = 6-bit field reserved for future use.
PanelTransportTCP.jbCWR.text = <html><center>C<br>W<br>R</center></html>
PanelTransportTCP.jbCWR.tooltip = Field used in congestion control.
PanelTransportTCP.jbECE.text = <html><center>E<br>C<br>E</center></html>
PanelTransportTCP.jbECE.tooltip = Field used in congestion control.
PanelTransportTCP.jbURG.text = <html><center>U<br>R<br>G</center></html>
PanelTransportTCP.jbURG.tooltip = The field value for Urgent Pointer is valid.
PanelTransportTCP.jbACK.text = <html><center>A<br>C<br>K</center></html>
PanelTransportTCP.jbACK.tooltip = The field value for Urgent Pointer is valid.
PanelTransportTCP.jbPSH.text = <html><center>P<br>S<br>H</center></html>
PanelTransportTCP.jbPSH.tooltip = With this option the receiver delivers the data to the application soon after arriving, rather than store them until a full buffer was filled.
PanelTransportTCP.jbRST.text = <html><center>R<br>S<br>T</center></html>
PanelTransportTCP.jbRST.tooltip = Resets the connection.
PanelTransportTCP.jbSYN.text = <html><center>S<br>Y<br>N</center></html>
PanelTransportTCP.jbSYN.tooltip = Synchronizes sequence numbers for the connection.
PanelTransportTCP.jbFIN.text = <html><center>F<br>I<br>N</center></html>
PanelTransportTCP.jbFIN.tooltip = Closes the connection.
PanelTransportTCP.jbWindowSize.text = Window Size
PanelTransportTCP.jbWindowSize.tooltip = This field defines the size of a TCP window in bytes, that the other party must maintain.
PanelTransportTCP.jbCheckSum.text = Checksum
PanelTransportTCP.jbCheckSum.tooltip = This 16-bit field contains the calculated checksum.
PanelTransportTCP.jbUrgentPointer.text = Urgent Pointer
PanelTransportTCP.jbUrgentPointer.tooltip = This 16-bit field is used to report the status from the current sequence number, in which urgent datas is found.
PanelTransportTCP.jbOptions.text = Options
PanelTransportTCP.jbOptions.tooltip = This field can contain a total of up to 40 bytes of information which are included to optional TCP header.
PanelTransportTCP.jbData.text = Data (Aplication)
PanelTransportTCP.jspProtocolDescription.title=Protocol TCP Description
PanelTransportTCP.jepProtocolDescription.text=The TCP (Tranmission Control Protocol) is a connection-oriented protocol, it creates a virtual connection between two TCPs processes for data transmission. In addition, TCP implements flow and errors control mechanisms in the transport layer.

PanelApplicationHTTP.jbHTTPHeader.text = HTTP Header
PanelApplicationHTTP.jbHTTPHeader.tooltip = Defines the parameters of the message can be a request header or response header.
PanelApplicationHTTP.jbData.text = Data
PanelApplicationHTTP.jbData.tooltip = Body of the message containing the message content requested by the client.
PanelApplicationHTTP.jspProtocolDescription.title=Protocol HTTP Description
PanelApplicationHTTP.jepProtocolDescription.text=The HTTP, HyperText Transfer Protocol, is a protocol simple request-response type that runs over TCP. It specifies which clients can send messages to the server and what responses they get back.






