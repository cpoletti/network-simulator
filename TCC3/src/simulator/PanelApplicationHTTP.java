/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PanelApplicationHTTP.java
 *
 * Created on 08/09/2010, 19:13:34
 */
package simulator;

import datagram.DatagramApplicationHTTP;
import java.awt.Color;
import java.util.ResourceBundle;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

/**
 *
 * @author Diego Muller
 */
public class PanelApplicationHTTP extends PanelApplication {

    /**
     * Creates new form PanelApplicationHTTP
     */
    public PanelApplicationHTTP() {
        initComponents();

        jtaHTTPHeader.setVisible(false);
        jtaData.setVisible(false);

        jepProtocolDescription.setContentType("text/html");
        translate();
    }

    @Override
    public void setDatagram(DatagramApplication httpDatagram) {
        ((DatagramApplicationHTTP) httpDatagram).setHTTPHeader(this.getHTTPHeader());
        ((DatagramApplicationHTTP) httpDatagram).setData(this.getData());
    }

    @Override
    public void setPanelFields(DatagramApplication httpDatagram) {
        this.setHTTPHeader(((DatagramApplicationHTTP) httpDatagram).getHTTPHeader());
        this.setData(((DatagramApplicationHTTP) httpDatagram).getData());
    }

    @Override
    public void setEditable(boolean edit) {
        jbHTTPHeader.setEnabled(edit);
        jbData.setEnabled(edit);
    }

    /**
     * Gets the HTTP header text
     *
     * @return the HTTP header text
     */
    public String getHTTPHeader() {
        return jtaHTTPHeader.getText();
    }

    /**
     * Gets the HTTP data value
     *
     * @return the HTTP data value
     */
    public Object getData() {
        return jtaData.getText();
    }

    /**
     * Sets the HTTP header text
     *
     * @param httpHeader the HTTP header text
     */
    public void setHTTPHeader(String httpHeader) {
        this.jtaHTTPHeader.setText(httpHeader);
        updateHTTPHeaderButton();
    }

    /**
     * Sets the HTTP data value
     *
     * @param data the HTTP data value
     */
    public void setData(Object data) {

        this.jtaData.setText((String) data);
        updateDataButton();
    }

    /**
     * Change the http header button text
     */
    private void updateHTTPHeaderButton() {
        if (jtaHTTPHeader.getText().trim().equals("")) {
            jbHTTPHeader.setText(Config.getInstance().getBundle().getString("PanelApplicationHTTP.jbHTTPHeader.text"));
        } else {
            //if the http header text is empty sets a default value
            jbHTTPHeader.setText("<html>" + Config.getInstance().getBundle().getString("PanelApplicationHTTP.jbHTTPHeader.text") + ":<br>" + jtaHTTPHeader.getText().replace("\n", "<br>") + "</html>");
        }
        jbHTTPHeader.setVisible(true);
        jtaHTTPHeader.setVisible(false);
    }

    /**
     * Change the http data button text
     */
    private void updateDataButton() {
        if (jtaData.getText().trim().equals("")) {
            jbData.setText(Config.getInstance().getBundle().getString("PanelApplicationHTTP.jbData.text"));
        } else {
            //if the http data text is empty sets a default value
            jbData.setText("<html>" + Config.getInstance().getBundle().getString("PanelApplicationHTTP.jbData.text") + ":<br>" + jtaData.getText().replace("\n", "<br>") + "</html>");
        }
        jbData.setVisible(true);
        jtaData.setVisible(false);
    }

    public final void translate() {
        ResourceBundle bundle = Config.getInstance().getBundle();

        updateHTTPHeaderButton();
        updateDataButton();

        jbHTTPHeader.setToolTipText(bundle.getString("PanelApplicationHTTP.jbHTTPHeader.tooltip"));
        jbData.setToolTipText(bundle.getString("PanelApplicationHTTP.jbData.tooltip"));

        //change border text and color
        TitledBorder titledBorder = javax.swing.BorderFactory.createTitledBorder(bundle.getString("PanelApplicationHTTP.jspProtocolDescription.title"));
        titledBorder.setBorder(new LineBorder(Color.BLACK, 1, true));

        //translate protol description
        jspProtocolDescription.setBorder(titledBorder);
        jepProtocolDescription.setText(bundle.getString("PanelApplicationHTTP.jepProtocolDescription.text"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jbHTTPHeader = new simulator.ToolTipButton();
        jbData = new simulator.ToolTipButton();
        jspHTTPHeader = new javax.swing.JScrollPane();
        jtaHTTPHeader = new javax.swing.JTextArea();
        jspData = new javax.swing.JScrollPane();
        jtaData = new javax.swing.JTextArea();
        jspProtocolDescription = new javax.swing.JScrollPane();
        jepProtocolDescription = new javax.swing.JEditorPane();

        setBackground(backgroundColorApplication);
        setLayout(new java.awt.GridBagLayout());

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("simulator/Bundle"); // NOI18N
        jbHTTPHeader.setText(bundle.getString("PanelApplicationHTTP.jbHTTPHeader.text")); // NOI18N
        jbHTTPHeader.setToolTipText(bundle.getString("PanelApplicationHTTP.jbHTTPHeader.tooltip")); // NOI18N
        jbHTTPHeader.setMargin(new java.awt.Insets(1, 1, 1, 1));
        jbHTTPHeader.setMaximumSize(new java.awt.Dimension(0, 0));
        jbHTTPHeader.setMinimumSize(new java.awt.Dimension(0, 0));
        jbHTTPHeader.setPreferredSize(new java.awt.Dimension(0, 0));
        jbHTTPHeader.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbHTTPHeaderActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 10);
        add(jbHTTPHeader, gridBagConstraints);

        jbData.setText(bundle.getString("PanelApplicationHTTP.jbData.text")); // NOI18N
        jbData.setToolTipText(bundle.getString("PanelApplicationHTTP.jbData.tooltip")); // NOI18N
        jbData.setMargin(new java.awt.Insets(1, 1, 1, 1));
        jbData.setMaximumSize(new java.awt.Dimension(0, 0));
        jbData.setMinimumSize(new java.awt.Dimension(0, 0));
        jbData.setPreferredSize(new java.awt.Dimension(0, 0));
        jbData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbDataActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 10, 10);
        add(jbData, gridBagConstraints);

        jspHTTPHeader.setMaximumSize(new java.awt.Dimension(0, 0));
        jspHTTPHeader.setMinimumSize(new java.awt.Dimension(0, 0));
        jspHTTPHeader.setPreferredSize(new java.awt.Dimension(0, 0));

        jtaHTTPHeader.setColumns(20);
        jtaHTTPHeader.setText("HTTP/1.0 200 OK\nDate: Mon, 1 Mar 2010 01:22:22 GMT\nServer: Apache/1.2.5\nLast-Modified: Thu, 30 Oct 2010 10:03:37 GMT\nEtag: \"130offe-81-3883bbe9\"\nContent-Lenght: 129\nAccept-Ranges: bytes\nConnection: close\nContent-Type: text/plain");
        jtaHTTPHeader.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtaHTTPHeaderFocusLost(evt);
            }
        });
        jspHTTPHeader.setViewportView(jtaHTTPHeader);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 10);
        add(jspHTTPHeader, gridBagConstraints);

        jspData.setMaximumSize(new java.awt.Dimension(0, 0));
        jspData.setMinimumSize(new java.awt.Dimension(0, 0));
        jspData.setPreferredSize(new java.awt.Dimension(0, 0));

        jtaData.setColumns(20);
        jtaData.setText("sent data");
        jtaData.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtaDataFocusLost(evt);
            }
        });
        jspData.setViewportView(jtaData);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 10, 10);
        add(jspData, gridBagConstraints);

        jspProtocolDescription.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), bundle.getString("PanelApplicationHTTP.jspProtocolDescription.title"))); // NOI18N

        jepProtocolDescription.setEditable(false);
        jepProtocolDescription.setText(bundle.getString("PanelApplicationHTTP.jepProtocolDescription.text")); // NOI18N
        jspProtocolDescription.setViewportView(jepProtocolDescription);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        add(jspProtocolDescription, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void jbHTTPHeaderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbHTTPHeaderActionPerformed
        jtaHTTPHeader.setVisible(true);
        jbHTTPHeader.setVisible(false);
        jtaHTTPHeader.requestFocus();
}//GEN-LAST:event_jbHTTPHeaderActionPerformed

    private void jbDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbDataActionPerformed
        jtaData.setVisible(true);
        jbData.setVisible(false);
        jtaData.requestFocus();
    }//GEN-LAST:event_jbDataActionPerformed

    private void jtaHTTPHeaderFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtaHTTPHeaderFocusLost
        updateHTTPHeaderButton();
    }//GEN-LAST:event_jtaHTTPHeaderFocusLost

    private void jtaDataFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtaDataFocusLost
        updateDataButton();
    }//GEN-LAST:event_jtaDataFocusLost
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private simulator.ToolTipButton jbData;
    private simulator.ToolTipButton jbHTTPHeader;
    private javax.swing.JEditorPane jepProtocolDescription;
    private javax.swing.JScrollPane jspData;
    private javax.swing.JScrollPane jspHTTPHeader;
    private javax.swing.JScrollPane jspProtocolDescription;
    private javax.swing.JTextArea jtaData;
    private javax.swing.JTextArea jtaHTTPHeader;
    // End of variables declaration//GEN-END:variables
}
